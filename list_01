#include <iostream>
using namespace std;
struct node {
	int value;
	node * next;
};

void add(node *begin, int a) {
	node* j = new node;
	j->next = begin;
	j->value = a;
	if (begin->value == NULL) { begin->value = a; begin->next = NULL; delete j; return; }
	else {
		while (begin) {
			if (begin->next == NULL) {
				begin->next = j;
				j->next = NULL;
				break;
			}
			begin = begin->next;
		}
	}
}

void Print(node *m) {
	node *print = m;
	while (print) {
		cout << print->value << " -> ";
		print = print->next;
	}
	cout << "NULL" << endl;
	delete print;
}

void Del(node **begin) {
	node* j = new node;
	*j = **begin;
	*begin = j->next;
	delete j;
}

void reverse(node ** head)
{
	if (*head == NULL) return;
	struct node * curr, *next, *prev = NULL;
	curr = *head;
	while (curr)
	{
		next = curr->next;
		curr->next = prev;
		prev = curr;
		curr = next;
	}
	*head = prev;
}

char op;
int main()
{
	int a; char q=0;
	node *begin = new node;
	begin->value = NULL;
	while (op != 'q') {
		cin >> op;
		switch (op) {
		case '+':
			cin >> a;
			add(begin, a);
			Print(begin);
			break;
		case '=':
			Print(begin);
			break;
		case '-':
			Del(&begin);
			Print(begin);
			break;
		case '/':
			reverse(&begin);
			Print(begin);
			break;
		}
	}
    return 0;
}
